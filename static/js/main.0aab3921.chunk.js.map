{"version":3,"sources":["assets/img/logo.png","components/Pulse.js","reducers/reducer.js","reducers/store.js","components/Language.js","data/Dictionnary.js","components/Translate.js","components/Navbar.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pulse","className","id","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","Component","initialState","selectedLanguage","reducer","state","action","type","payload","createStore","SwitchLanguage","props","fr","handleClick","bind","this","setState","dispatch","onClick","style","backgroundColor","htmlFor","connect","EN","welcome","name","about","exp","project","intro","FR","Translate","data","NavBar","listener","isScrolled","nav","React","createRef","document","addEventListener","e","scrollingElement","scrollTop","current","clientHeight","removeEventListener","ref","color","src","logo","alt","href","Main","App","loading","demoAsyncCall","then","Promise","resolve","setTimeout","store","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0aab3921.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c66df289.png\";","import React, { Component } from 'react';\n\nclass Pulse extends Component {\n    \n    render() {\n\n        return (\n            <div className=\"container\">\n\n                <svg id=\"brackets\"  width=\"200\" height=\"100\" viewBox=\"0 0 382 284\" fill=\"transparent\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M35.75 181.984C35.75 177.109 34.9531 172.703 33.3594 168.766C31.7656 164.734 29.5156 161.312 26.6094 158.5C23.7969 155.688 20.375 153.531 16.3438 152.031C12.4062 150.438 8.09375 149.641 3.40625 149.641H0.3125V134.172H4.95312C9.45312 133.984 13.5781 133.094 17.3281 131.5C21.0781 129.906 24.3125 127.703 27.0312 124.891C29.75 122.078 31.8594 118.75 33.3594 114.906C34.9531 110.969 35.75 106.609 35.75 101.828V49.7969C35.75 42.5781 36.9688 35.9688 39.4062 29.9688C41.9375 23.875 45.4062 18.625 49.8125 14.2188C54.3125 9.8125 59.5625 6.39062 65.5625 3.95312C71.6562 1.42188 78.2188 0.15625 85.25 0.15625H86.6562V15.7656H85.25C80.5625 15.7656 76.25 16.5625 72.3125 18.1562C68.375 19.6562 64.9531 21.8125 62.0469 24.625C59.2344 27.4375 57.0312 30.8594 55.4375 34.8906C53.8438 38.8281 53.0469 43.1875 53.0469 47.9688V100.141C53.0469 109.234 51.0312 117.438 47 124.75C43.0625 132.062 37.7656 137.781 31.1094 141.906C37.7656 146.219 43.0625 151.984 47 159.203C51.0312 166.422 53.0469 174.578 53.0469 183.672V235.844C53.0469 240.625 53.8438 244.984 55.4375 248.922C57.0312 252.953 59.2344 256.375 62.0469 259.188C64.9531 262 68.375 264.156 72.3125 265.656C76.25 267.25 80.5625 268.047 85.25 268.047H86.6562V283.656H85.25C78.2188 283.656 71.6562 282.391 65.5625 279.859C59.5625 277.422 54.3125 274 49.8125 269.594C45.4062 265.188 41.9375 259.938 39.4062 253.844C36.9688 247.844 35.75 241.234 35.75 234.016V181.984Z\"\n                        fill=\"transparent\" stroke=\"white\" strokeWidth=\"4\"\n                    />\n                    <path\n                        d=\"M118.297 226V204.344H139.953V226H118.297Z\"\n                        fill=\"transparent\" stroke=\"white\" strokeWidth=\"4\"\n                    />\n                    <path\n                        d=\"M180.172 226V204.344H201.828V226H180.172Z\"\n                        fill=\"none\" stroke=\"white\" strokeWidth=\"4\"\n                    />\n                    <path d=\"M242.047 226V204.344H263.703V226H242.047Z\"\n                        fill=\"transparent\" stroke=\"white\" strokeWidth=\"4\"\n                    />\n                    <path\n                        d=\"M346.25 234.016C346.25 241.234 344.984 247.844 342.453 253.844C340.016 259.938 336.547 265.188 332.047 269.594C327.641 274 322.391 277.422 316.297 279.859C310.297 282.391 303.781 283.656 296.75 283.656H295.344V268.047H296.75C301.438 268.047 305.75 267.25 309.688 265.656C313.625 264.156 317.047 262 319.953 259.188C322.859 256.375 325.109 252.953 326.703 248.922C328.297 244.984 329.094 240.625 329.094 235.844V183.672C329.094 174.578 331.016 166.422 334.859 159.203C338.797 151.984 344.141 146.219 350.891 141.906C344.141 137.688 338.797 131.969 334.859 124.75C331.016 117.438 329.094 109.234 329.094 100.141V47.9688C329.094 43.1875 328.297 38.8281 326.703 34.8906C325.109 30.8594 322.859 27.4375 319.953 24.625C317.047 21.8125 313.625 19.6562 309.688 18.1562C305.75 16.5625 301.438 15.7656 296.75 15.7656H295.344V0.15625H296.75C303.781 0.15625 310.297 1.42188 316.297 3.95312C322.391 6.39062 327.641 9.8125 332.047 14.2188C336.547 18.625 340.016 23.875 342.453 29.9688C344.984 35.9688 346.25 42.5781 346.25 49.7969V101.828C346.25 106.703 347.047 111.156 348.641 115.188C350.234 119.125 352.484 122.5 355.391 125.312C358.297 128.125 361.719 130.328 365.656 131.922C369.594 133.422 373.906 134.172 378.594 134.172H381.688V149.641H377.188C372.688 149.734 368.516 150.625 364.672 152.312C360.922 153.906 357.641 156.156 354.828 159.062C352.109 161.875 350 165.25 348.5 169.188C347 173.031 346.25 177.297 346.25 181.984V234.016Z\"\n                        fill=\"transparent\" stroke=\"white\" strokeWidth=\"4\"\n                    />\n                </svg>\n\n                <p className=\"name orange\">Océane</p>\n\n            </div >\n\n        );\n    }\n\n}\n\nexport default Pulse;","export const availableLanguages = [\n    { shortCode: \"EN\", label: \"English\" },\n    { shortCode: \"FR\", label: \"Français\" },\n];\n\nexport const initialState = {\n    selectedLanguage: \"FR\",\n};\n\nfunction reducer(state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case \"LANGUAGE_UPDATE\": {\n            return { ...state, selectedLanguage: payload };\n        }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport default createStore(reducer);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass SwitchLanguage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fr: true,\n        }\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    handleClick() {\n\n        this.setState((state) => ({ fr: !state.fr }));\n\n    }\n\n    componentDidUpdate() {\n        var lang;\n        if (this.state.fr) {\n            lang=\"FR\";\n        } else {\n            lang=\"EN\";\n        }\n        const action = { type: \"LANGUAGE_UPDATE\", payload: lang };\n        this.props.dispatch(action);\n    }\n\n    render() {\n        return (\n            <div className=\"switch-language\">\n                <p>Fr</p>\n\n                <input\n                    type=\"checkbox\"\n                    id=\"toggleSwitch\"\n                    className=\"toggle-checkbox\"\n                    onClick={this.handleClick}\n                />\n                <label\n                    style={{ backgroundColor: this.state.fr ? \"grey\" : \"#06D6A0\" }}\n                    htmlFor=\"toggleSwitch\"\n                    className=\"toggle-label\"\n                >\n                    <span className=\"toggle-button\"></span>\n                </label>\n\n                <p>Eng</p>\n            </div>\n\n\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return state;\n}\n\nexport default connect(mapStateToProps)(SwitchLanguage);","export default {\n  EN: {\n    welcome: 'Hi',\n    name: 'My name is',\n    about: 'About',\n    exp: 'Experience',\n    project: 'Projects',\n    intro: 'Student in Information System based in Paris.'\n  },\n  FR: {\n    welcome: 'Bonjour',\n    name: 'Je m\\'appelle',\n    about: 'A propos',\n    exp: 'Expérience',\n    project: 'Projets',\n    intro: 'Etudiante en Systèmes d’Information à Paris.',\n  }\n};","import { Component, Fragment } from 'react';\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport data from '../data/Dictionnary';\n\n\nclass Translate extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id\n    }\n\n  }\n\n  render() {\n    return (\n      <Fragment>{data[this.props.selectedLanguage][this.props.id]}</Fragment>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n}\n\nexport default connect(mapStateToProps)(Translate);","import React, { Component } from 'react';\nimport logo from '../assets/img/logo.png';\nimport SwitchLanguage from './Language';\nimport Translate from './Translate';\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.listener = null;\n        this.state = {\n            isScrolled: false,\n        };\n        this.nav = React.createRef();\n    }\n\n    componentDidMount() {\n        this.listener = document.addEventListener(\"scroll\", e => {\n            var scrolled = document.scrollingElement.scrollTop;\n            if (scrolled >= this.nav.current.clientHeight) {\n                if (!this.state.isScrolled) {\n                    this.setState({ isScrolled: true });\n                }\n            } else {\n                if (this.state.isScrolled) {\n                    this.setState({ isScrolled: false });\n                }\n            }\n        });\n    }\n\n    componentDidUpdate() {\n        document.removeEventListener(\"scroll\", this.listener);\n    }\n\n    render() {\n        return (\n            <div className=\"navBar\" ref={this.nav} style={{\n                backgroundColor: this.state.isScrolled ? \"rgb(14, 9, 15)\" : \"transparent\",\n                color: this.state.isScrolled ? \"white\" : \"white\",\n            }}>\n                <div className=\"logo\">\n                    <img src={logo} alt=\"logo\" height=\"50px\"/>\n                </div>\n                <div className=\"links\">\n                    <a href=\"#about\"><Translate id=\"about\"/></a>\n                    <a href=\"#exp\"><Translate id=\"exp\"/></a>\n                    <a href=\"#project\"><Translate id=\"project\"/></a>\n                    <SwitchLanguage/>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default NavBar;","import React, { Component } from 'react';\n\nimport NavBar from './Navbar';\nimport Translate from './Translate';\n\n\n\nclass Main extends Component {\n\n    render() {\n        return (\n            <div id=\"app\">\n                <NavBar />\n                <div className=\"header\">\n                    <div className=\"introduction\">\n                        <h1 className=\"title\">\n                            <Translate id=\"welcome\" />,<br /><Translate id=\"name\" />\n                            <span className=\"orange\"> Océane Salmeron</span>.</h1>\n                        <p><Translate id=\"intro\"/></p>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Main;","import React, { Component } from 'react';\nimport { Provider } from \"react-redux\";\nimport './App.css';\nimport Pulse from './components/Pulse';\nimport store from \"./reducers/store\";\nimport Main from \"./components/Main\";\n\nclass App extends Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount() {\n    // this simulates an async action, after which the component will render the content\n    this.demoAsyncCall().then(() => this.setState({ loading: false }));\n  }\n\n  demoAsyncCall() {\n    return new Promise((resolve) => setTimeout(() => resolve(), 5300));\n  }\n\n  render() {\n\n    const { loading } = this.state;\n\n    if (loading) { // if your component doesn't have to wait for an async action, remove this block \n      return (\n        <Pulse />\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <Main/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}